//============================================================
//
// Simple Grid SCSS
//
// @description
//   Basic layout for the grid:
// @version 0.0.1
//
// @author L.Prandi
//
//============================================================


//============================================================
// Mixins
//============================================================

@mixin grid() {
	max-width: $grid-width + px;
	margin: 0 auto;
	
	&:after {
  	display: table;
		content: "";
  	clear: both;
	}
}

@mixin grid-column($nb-column, $gutter: true, $size-break: "mobile") {
	float: left;
	width: 100%;

	@if $size-break == 'mobile' {
		@media #{$mobile-up} {
			width: ((100 / $nb-grid-column) * $nb-column) *1%;
		}
	}
	@else if $size-break == 'tablet' {
		@media #{$tablet-up} {
			width: ((100 / $nb-grid-column) * $nb-column) *1%;
		}
	}
	@else if $size-break == 'desktop' {
		@media #{$desktop-up} {
			width: ((100 / $nb-grid-column) * $nb-column) *1%;
		}
	}
	@else if $size-break == 'large-desktop' {
		@media #{$large-desktop-up} {
			width: ((100 / $nb-grid-column) * $nb-column) *1%;
		}
	}

	@if $gutter {
		padding-right: $column-gutter/4 + px;
		padding-left: $column-gutter/4 + px;
	}

	&:after {
		content: " test " + #{$mobile-only};
	}
}

* {
	box-sizing: border-box;
	
	&:before, &:after {
		box-sizing: border-box;
	}
}


//============================================================
// Grid
//============================================================

.grid {
	@include grid();

	&__column {
		@for $i from 1 through $nb-grid-column {
			
			&--#{$i} {
				@include grid-column($i, $gutter: $has-gutter, $size-break: $global-size-break);
				
				padding-bottom: 10px;
				padding-top: 10px;
			}
		}
	}
}
